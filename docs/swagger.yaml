openapi: 3.0.2
info:
    title: Computers-API
    version: 1.0.0
    description: >-
        ### This is a Swagger UI for our Games API  


        ### Error handling

        Errors are presented using the HTTP status codes 400-599. The response include a more detailed
        explanation about the error in the body.


        ```

        {
          "error": "Cleartext explanation of the error that occurred"
        }

        ```


        ### Generic API errors

        These error responses can be returned by any of the described endpoints.


        | HTTP status  |  Description |

        |---|---|

        | 400| Bad input parameters or invalid request. More information can be found in the response body.

        | 401| The consumer does not have access to the requested resource or the provided token is not valid.

        | 404| The requested resource can not be found or the user does not have access to the resource.

        | 5XX| A server error has occurred while processing the request.
paths:
    '/orders/{ID}':
        get:
            tags:
                - orders
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                Get a list of all orders:
                                    value: |-
                                        [
                                            {orderID:1, ProductID:8, ]}
                                            {orderID:4, ProductID:9]}
                                        ]
                    description: Returns order information
                '404':
                    description: Order not found
                '500':
                    description: 'Iternal Server Error, Try Again Later'
            summary: Get a list of all ORDERS
            description: |+
                RETURNS a list of all ORDERS

        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            New order:
                                value: '{orderid: 2, productid: 3, productamount: 1, price: 200}'
                required: true
            tags:
                - orders
            responses:
                '200':
                    description: Order has been updated.
                '500':
                    description: 'Iternal Server Error, try Again Later'
            summary: Update order information.
        delete:
            tags:
                - orders
            responses:
                '200':
                    description: Order deleted.
            summary: Delete an order
        parameters:
            -
                name: ID
                in: path
                required: true
    '/products/{ID}':
        description: ''
        get:
            tags:
                - products
            responses:
                '200':
                    description: Returns a list and information of requested products
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        Error: Product not found
                    description: Product not found.
                '500':
                    description: 'Iternal Server Error, Try Again Later'
            summary: Get a list of all PRODUCTS
            description: |
                Returns information about product
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            New product:
                                value: '{productid:15, name:"SuperDuperMega PC", price:"999"}'
                required: true
            tags:
                - products
            responses:
                '200':
                    description: Product information has been updated.
                '500':
                    description: 'Iternal Server Error, try Again Later'
            summary: Updates product information
        delete:
            tags:
                - products
            responses:
                '204':
                    description: |
                        Deleted
            summary: Delete product
        parameters:
            -
                name: ID
                in: path
                required: true
    /products:
        get:
            tags:
                - products
            responses:
                '200':
                    description: Returns a list of products.
                '404':
                    description: |
                        Product not found
                '500':
                    description: 'Iternal Server Error, Try Again Later.'
            summary: Get a product
            description: |
                Returns a list of product
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/product'
                required: true
            tags:
                - products
            responses:
                '200':
                    description: Product has been created.
                '500':
                    description: 'Iternal Server Error, try Again Later'
            summary: Create a new product
    /users:
        get:
            tags:
                - users
            responses:
                '200':
                    description: Returns user information
                '400':
                    description: user not found
                '500':
                    description: 'Iternal Server Error, Try Again Later'
            summary: Get a list of user
            description: |
                Returns information about an user
        post:
            requestBody:
                required: false
            tags:
                - users
            responses:
                '200':
                    description: User has been created
                '500':
                    description: >-
                        Server encountered an unexpected condition that prevented it from fulfilling the
                        request.
            summary: Create user
    '/users/{ID}':
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json: {}
                    description: Returns user information
                '400':
                    description: Error getting user information
                '500':
                    description: 'Iternal Server Error, Try Again Later'
            summary: Get a list of all users
            description: |
                Returns information about all users
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            New Product:
                                value: '{userid:4, name: "RassssJ", email: "RasmusJ@gmail.com", phone:"555555"}'
                required: true
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json: {}
                    description: User information has been updated.
                '500':
                    description: 'Iternal Server Error, try Again Later'
            summary: Update user information
        delete:
            tags:
                - users
            responses:
                '200':
                    description: User has been deleted
                '400':
                    description: Error deleting user.
                '401':
                    description: Not authorized to delete user.
            summary: Delete user
        parameters:
            -
                name: ID
                in: path
                required: true
    /orders:
        get:
            tags:
                - orders
            responses:
                '200':
                    description: Returns order information
                '404':
                    description: Order not found
                '500':
                    description: 'Iternal Server Error, Try Again Later'
            summary: Return information of an order.
            description: Returns a list of order
        post:
            tags:
                - orders
            responses:
                '200':
                    description: Order has been created.
                '500':
                    description: 'Iternal Server Error, try Again Later'
            summary: Create an order
    /invoices:
        get:
            tags:
                - invoices
            responses:
                '200':
                    description: Returns a list of invoices
                '404':
                    description: Invoice not found.
                '500':
                    description: 'Iternal Server Error, Try Again Later'
            summary: Get a list of invoice
            description: Returns a list of invoice
        post:
            requestBody:
                content:
                    application/json: {}
                required: true
            tags:
                - invoices
            responses:
                '200':
                    description: Creates and invoice.
                '404':
                    description: Invoice not found
                '500':
                    description: 'Internal server error, try again later.'
            summary: Creates an invoice
    '/invoices/{ID}':
        get:
            tags:
                - invoices
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Get a list of all invoices:
                                    value: |-
                                        [
                                            [
                                            {orderID:1, clientID:2, invoiceID: 3,description:["Intel® Core™ i5-13600KF","GIGABYTE B760 GAMING","GeForce RTX™ 4060 8GB","16GB DDR5","1000 GB HDD"]},
                                            {orderID:4, clientID:5, invoiceID: 6,description:["Intel Core i5-12400F","GIGABYTE H610","GeForce RTX™ 4060 8GB","16GB DDR5","1000 GB HDD"]}
                                        ]
                                        ]
                    description: Returns the information of an invoice
                '404':
                    description: Invoice not found
                '500':
                    description: 'Iternal Server Error, Try Again Later'
            summary: Get a list of all INVOICES
            description: RETURNS a list of all INVOICES
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            Invoice:
                                value: '{invoiceid: 1, orderid: 2, userid: 3, descrption: ''HUH?''}'
                required: true
            tags:
                - invoices
            responses:
                '200':
                    description: |
                        Returns a list of invoices
                '404':
                    description: Invoice not found
                '500':
                    description: Internal Server Error. Try Again Later
        delete:
            tags:
                - invoices
            responses:
                '200':
                    description: Invoice has been deleted
                '400':
                    description: Error deleting invoice
                '401':
                    description: Not authorized to delete invoice
            summary: Delete an invoice
        parameters:
            -
                name: ID
                in: path
                required: true
components:
    schemas:
        error:
            title: Root Type for errir
            description: ''
            type: object
            properties:
                Error:
                    type: string
            example:
                Error: Error message
        product:
            title: Root Type for product
            description: ''
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                name:
                    type: string
                price:
                    format: int32
                    type: integer
            example:
                productid: 1
                productstock: 100
                productname: Gaming PC Ultra
                productprice: 3999
        user:
            title: Root Type for user
            description: ''
            type: array
            items:
                type: string
            example: |-
                [
                    userid: "Marcus Toman",
                    userid: "Rasmus Jalakas"
                ]
        invoice:
            title: Root Type for invoice
            description: Invoice with product id and invoice specific id.
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                name:
                    type: string
                price:
                    format: int32
                    type: integer
            example:
                invoiceid: 1
                orderid: 2
                name: Gaming PC Ultra
                price: 3999
        order:
            title: Root Type for order
            description: ''
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                name:
                    type: string
                price:
                    format: int32
                    type: integer
            example:
                orderid: 1
                name: Gaming PC Ultra
                price: 3999
tags:
    -
        name: products
        description: ''
