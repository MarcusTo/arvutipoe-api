openapi: 3.0.2
info:
    title: Computers-API
    version: 1.0.0
    description: >-
        ### This is a Swagger UI for our ComputerStore API  


        ### Error handling

        Errors are presented using the HTTP status codes 400-599. The response include a more detailed
        explanation about the error in the body.


        ```

        {
          "error": "Cleartext explanation of the error that occurred"
        }

        ```


        ### Generic API errors

        These error responses can be returned by any of the described endpoints.


        | HTTP status  |  Description |

        |---|---|

        | 400 | Bad input parameters or invalid request. More information can be found in the response body.

        | 401 | The consumer does not have access to the requested resource or the provided token is not
        valid.

        | 404 | The requested resource can not be found or the user does not have access to the resource.

        | 500 | A server error has occurred while processing the request.
paths:
    '/orders/{ID}':
        get:
            tags:
                - orders
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Single Order:
                                    value:
                                        id: 1
                                        UserId: 2
                                        ProductId: 3
                                        price: 1600
                                        productAmount: 4
                    description: Returns order information
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Order not found!
                    description: Order not found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Internal Server Error
                    description: 'Iternal Server Error, Try Again Later'
            summary: Returns information of an order.
            description: |
                Get a single order
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            New order:
                                value:
                                    id: 3
                                    price: 1600
                                    productAmount: 1
                                    productId: 6
                required: true
            tags:
                - orders
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                            examples:
                                newOrder:
                                    value:
                                        id: 1
                                        userId: 2
                                        productId: 3
                                        price: 1600
                                        productAmount: 4
                    description: Order updated.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Order Not Found
                    description: Order not found.
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Update error:
                                    value:
                                        error: Error updating order information.
                    description: 'Iternal Server Error, try Again Later'
            summary: Update order.
            description: Updates order information.
        delete:
            tags:
                - orders
            responses:
                '204':
                    description: Order deleted.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Order Not Found
                    description: Order Not Found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Iternal server error
                    description: "\r\nInternal server error."
            summary: Delete  order
            description: Deletes an exsisting order.
        parameters:
            -
                name: ID
                schema:
                    type: integer
                in: path
                required: true
    '/products/{ID}':
        description: ''
        get:
            tags:
                - products
            parameters:
                -
                    name: ID
                    description: ID
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/product'
                            examples:
                                Single product:
                                    value:
                                        id: 1
                                        name: 1OF1
                                        price: 1600
                    description: Returns product information.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        Error: Product not found
                    description: Product not found.
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Product Not Found
                    description: 'Iternal Server Error, Try Again Later'
            summary: Returns information of a product.
            description: |
                Get a single product.
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            Updated Product:
                                value:
                                    id: 1
                                    name: 1OF1
                                    price: 1600
                required: true
            tags:
                - products
            parameters:
                -
                    name: ID
                    description: ID
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/product'
                            examples:
                                Update product:
                                    value:
                                        id: 1
                                        name: 1OF1
                                        price: 1600
                    description: Product updated.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Product Not Found
                    description: Product Not Found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Internal Server Error
                    description: 'Iternal Server Error, try Again Later'
            summary: Update product
            description: Updates product information.
        delete:
            tags:
                - products
            responses:
                '204':
                    description: Product deleted.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Product Not Found Or Already Deleted
                    description: Product Not Found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: "\r\nInternal server error."
            summary: Delete product
            description: Deletes an exsisting product.
        parameters:
            -
                name: ID
                description: ID
                schema:
                    type: integer
                in: path
                required: true
    /products:
        get:
            tags:
                - products
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of all Products:
                                    value:
                                        id: 1
                                        name: 1OF1
                                        price: 1600
                    description: |
                        Returns a list of products.
            summary: Get a list of products.
            description: |
                Returns a list of products
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/product'
                        examples:
                            addProduct:
                                value:
                                    id: 1
                                    name: 1OF1
                                    price: 1600
                required: true
            tags:
                - products
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/product'
                            examples:
                                CreatedProduct:
                                    value:
                                        id: 1
                                        name: 1OF1
                                        price: 1600
                    description: "\r\nProduct has been created."
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not found:
                                    value:
                                        Error: Product Not Found
                    description: "\r\nError finding a product"
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Product Not Found
                    description: 'Iternal Server Error, try Again Later'
            summary: Create product
            description: Creates a new product
    /users:
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List Of All Users:
                                    value: []
                    description: Returns a list of users.
            summary: Get a list of users.
            description: |
                Returns a list of users
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
                        examples:
                            AddUser:
                                value:
                                    email: MarcusTo@gmail.com
                                    name: MarcusTo
                                    phoneNumber: 777777
                required: true
            tags:
                - users
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user'
                            examples:
                                NewUser:
                                    value:
                                        id: 3
                                        email: marcusto@gmail.com
                                        name: MarcusTo
                                        phoneNumber: 5555555
                    description: User has been created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        Error: Missing one or all parameters
                    description: One or all parameters are missing
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: >-
                        Server encountered an unexpected condition that prevented it from fulfilling the
                        request.
            summary: Create user
            description: Creates a new user
    '/users/{ID}':
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user'
                            examples:
                                Single User:
                                    value:
                                        id: 95
                                        email: marcusto@gmail.com
                                        name: MarcusTo
                                        phoneNumber: 5555555
                    description: Returns user information.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: Error getting user information
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Details error:
                                    value:
                                        Error: Error getting user details.
                    description: 'Iternal Server Error, Try Again Later'
            summary: Returns information of an user.
            description: Get a single user
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            New Product:
                                value:
                                    id: 1
                                    name: Marcus
                                    phoneNumber: 777777
                required: true
            tags:
                - users
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: User updated.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: User Not Found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: 'Iternal Server Error, try Again Later'
            summary: Update user
            description: Updates user information.
        delete:
            tags:
                - users
            parameters:
                -
                    name: ID
                    description: ID
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: User deleted.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: User Not Found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: "\r\nInternal server error."
            summary: Delete user
            description: Deletes an exsisting user.
        parameters:
            -
                name: ID
                description: ID
                schema:
                    type: integer
                in: path
                required: true
    /orders:
        get:
            tags:
                - orders
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Return all orders:
                                    value:
                                        id: 1
                                        UserId: 2
                                        ProductId: 3
                                        price: 1600
                                        productAmount: 4
                    description: Returns a list of orders
            summary: Get a list of orders.
            description: Returns a list of orders
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/order'
                        examples:
                            AddOrder:
                                value:
                                    id: 1
                                    UserId: 2
                                    ProductId: 3
                                    price: 1600
                                    productAmount: 4
                required: true
            tags:
                - orders
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                            examples:
                                newOrder:
                                    value:
                                        id: 1
                                        UserId: 2
                                        ProductId: 3
                                        price: 1600
                                        productAmount: 4
                    description: Order has been created.
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Order not found
                    description: Order not found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Internal server error.:
                                    value:
                                        error: Internal server error!
                    description: 'Iternal Server Error, try Again Later'
            summary: Create order
            description: |
                Creates a new order
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: 'Error getting information, please try again later.'
        product:
            title: Root Type for product
            description: ''
            type: object
            properties:
                name:
                    description: Product Name
                    type: string
                id:
                    format: int32
                    description: Product Id
                    type: integer
                price:
                    format: int32
                    description: Product Price
                    type: integer
            example:
                id: 1
                name: 1OF1
                price: 1600
                productAmount: 2
        order:
            title: Root Type for order
            description: ''
            required: []
            type: object
            properties:
                id:
                    format: int32
                    description: OrderId
                    type: integer
                    example: ''
                userId:
                    format: int32
                    description: User Id
                    type: integer
                productId:
                    format: int32
                    description: Product Id
                    type: integer
                price:
                    format: int32
                    description: Product Price
                    type: integer
                productAmount:
                    format: int32
                    description: Product Amount
                    type: integer
            example:
                id: 1
                userId: 2
                productId: 3
                price: 1600
                productAmount: 4
        user:
            title: Root type for user
            description: ''
            type: object
            properties:
                id:
                    format: int32
                    description: User Id
                    type: integer
                email:
                    description: User Email
                    type: string
                name:
                    description: User Name
                    type: string
                phoneNumber:
                    format: int32
                    description: User Phone Number
                    type: integer
            example:
                id: 1
                email: MarcusTo@gmail.com
                name: MarcusTo
                phoneNumber: 555555
tags:
    -
        name: products
        description: ''
