openapi: 3.0.2
info:
    title: Computers-API
    version: 1.0.0
    description: >-
        ### This is a Swagger UI for our Games API  


        ### Error handling

        Errors are presented using the HTTP status codes 400-599. The response include a more detailed
        explanation about the error in the body.


        ```

        {
          "error": "Cleartext explanation of the error that occurred"
        }

        ```


        ### Generic API errors

        These error responses can be returned by any of the described endpoints.


        | HTTP status  |  Description |

        |---|---|

        | 400| Bad input parameters or invalid request. More information can be found in the response body.

        | 401| The consumer does not have access to the requested resource or the provided token is not valid.

        | 404| The requested resource can not be found or the user does not have access to the resource.

        | 5XX| A server error has occurred while processing the request.
paths:
    '/orders/{ID}':
        get:
            tags:
                - orders
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Single Order:
                                    value: |-
                                        [
                                            "id":1,
                                            "orderId":2,
                                            "price":600,
                                            "userId":3
                                        ]
                    description: Returns order information
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Order not found!
                    description: Order not found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Internal Server Error
                    description: 'Iternal Server Error, Try Again Later'
            summary: Returns information of an order.
            description: |
                Get a single order
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            New order:
                                value: '{orderid: 2, productid: 3, productamount: 1, price: 200}'
                required: true
            tags:
                - orders
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                            examples:
                                newOrder:
                                    value:
                                        id: 1
                                        orderId: 2
                                        price: 600
                                        userId: 3
                    description: Order has been updated.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Order Not Found
                    description: Not Found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Update error:
                                    value:
                                        error: Error updating order information.
                    description: 'Iternal Server Error, try Again Later'
            summary: Update order.
            description: Updates order information.
        delete:
            tags:
                - orders
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Order Not Found
                    description: Order Not Found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Iternal server error
                    description: "\r\nInternal server error."
            summary: Delete  order
            description: Deletes an exsisting order.
        parameters:
            -
                name: ID
                schema:
                    type: integer
                in: path
                required: true
    '/products/{ID}':
        description: ''
        get:
            tags:
                - products
            parameters:
                -
                    name: ID
                    description: ID
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/product'
                            examples:
                                Single product:
                                    value:
                                        name: Testikas
                                        id: 42
                                        price: 900
                    description: Returns information of requested product
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        Error: Product not found
                    description: Product not found.
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Product Not Found
                    description: 'Iternal Server Error, Try Again Later'
            summary: Returns information of a product.
            description: |
                Get a single product.
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            Updated Product:
                                value:
                                    id: 40
                                    name: New product
                                    price: 3333
                required: true
            tags:
                - products
            parameters:
                -
                    name: ID
                    description: ID
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/product'
                    description: Product information has been updated.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Product Not Found
                    description: Product Not Found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Internal Server Error
                    description: 'Iternal Server Error, try Again Later'
            summary: Update product
            description: Updates product information.
        delete:
            tags:
                - products
            responses:
                '204':
                    description: Product has been deleted
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Product Not Found Or Already Deleted
                    description: Product Not Found
                '500':
                    description: "\r\nInternal server error."
            summary: Delete product
            description: Deletes an exsisting product.
        parameters:
            -
                name: ID
                description: ID
                schema:
                    type: integer
                in: path
                required: true
    /products:
        get:
            tags:
                - products
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of all Products:
                                    value: []
                    description: |
                        Returns a list of products.
            summary: Get a list of products.
            description: |
                Returns a list of products
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/product'
                        examples:
                            addProduct:
                                value:
                                    id: '4'
                                    name: PcOneOfOne
                                    price: 2000
                required: true
            tags:
                - products
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/product'
                            examples:
                                CreatedProduct:
                                    value:
                                        name: Testikas
                                        price: 599
                    description: "\r\nProduct has been created."
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not found:
                                    value:
                                        Error: Product Not Found
                    description: "\r\nError finding a product"
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Product Not Found
                    description: 'Iternal Server Error, try Again Later'
            summary: Create product
            description: Creates a new product
    /users:
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List Of All Users:
                                    value: []
                    description: Returns a list of users
            summary: Get a list of users.
            description: |
                Returns a list of users
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
                        examples:
                            AddUser:
                                value:
                                    email: some text
                                    name: some text
                                    phoneNumber: 99
                required: true
            tags:
                - users
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user'
                            examples:
                                NewUser:
                                    value:
                                        id: 60
                                        email: some text
                                        name: some text
                                        phoneNumber: 98
                    description: User has been created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        Error: Missing one or all parameters
                    description: One or all parameters are missing
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: >-
                        Server encountered an unexpected condition that prevented it from fulfilling the
                        request.
            summary: Create user
            description: Creates a new user
    '/users/{ID}':
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user'
                            examples:
                                Single User:
                                    value:
                                        -
                                            id: 95
                                            email: mtoman@gmail.com
                                            name: MarcusT
                                            phoneNumber: 5555555
                    description: Returns information of an user.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: Error getting user information
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Details error:
                                    value:
                                        Error: Error getting user details.
                    description: 'Iternal Server Error, Try Again Later'
            summary: Returns information of an user.
            description: Get a single user
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            New Product:
                                value:
                                    id: 1
                                    name: Marcus
                                    phoneNumber: 777777
                required: true
            tags:
                - users
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: User info has been updated
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: User Not Found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: 'Iternal Server Error, try Again Later'
            summary: Update user
            description: Updates user information.
        delete:
            tags:
                - users
            parameters:
                -
                    name: ID
                    description: ID
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: User has been deleted
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: User Not Found
                    description: User Not Found
                '500':
                    description: "\r\nInternal server error."
            summary: Delete user
            description: Deletes an exsisting user.
        parameters:
            -
                name: ID
                description: ID
                schema:
                    type: integer
                in: path
                required: true
    /orders:
        get:
            tags:
                - orders
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Empty Array:
                                    value: []
                    description: Returns a list of orders
            summary: Get a list of orders.
            description: Returns a list of orders
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/order'
                        examples:
                            AddOrder:
                                value:
                                    Id: 97
                                    productId: 50
                                    productAmount: 81
                                    invoiceId: 45
                                    price: 16
                required: true
            tags:
                - orders
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                            examples:
                                newOrder:
                                    value:
                                        id: 73
                                        productId: 94
                                        productAmount: 7
                                        invoiceId: 74
                                        price: 45
                    description: Order has been created.
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        error: Order not found
                    description: Order not found!
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Internal server error.:
                                    value:
                                        error: Internal server error!
                    description: 'Iternal Server Error, try Again Later'
            summary: Create order
            description: |
                Creates a new order
    /invoices:
        get:
            tags:
                - invoices
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Get a list of all invoices:
                                    value: []
                    description: Returns a list of invoices
            summary: Get a list of invoices.
            description: Returns a list of invoices
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/invoice'
                        examples:
                            addInvoice:
                                value:
                                    price: 3000
                                    orderId: 52
                                    userid: 87
                required: true
            tags:
                - invoices
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoice'
                            examples:
                                CreatedInvoice:
                                    value:
                                        id: 24
                                        price: 79
                                        orderId: 1
                                        userid: 97
                    description: |
                        Invoice has been created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: Invoice not found.
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Internal Server Error
                    description: 'Internal server error, try again later.'
            summary: Create invoice
            description: Creates a new invoice
    '/invoices/{ID}':
        get:
            tags:
                - invoices
            parameters:
                -
                    name: ID
                    description: ID
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/invoice'
                            examples:
                                Single Invoice:
                                    value:
                                        -
                                            id: 31
                                            price: 44
                                            orderId: 90
                                            userid: 24
                    description: Returns information of requested product.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Invoice Not Found
                    description: Invoice not found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Invoice Not Found
                    description: 'Iternal Server Error, Try Again Later'
            summary: Returns information of an invoice.
            description: Get a single invoice
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/invoice'
                        examples:
                            newInvoice:
                                value:
                                    id: 36
                                    price: 64
                                    orderId: 68
                                    userid: 99
                required: true
            tags:
                - invoices
            parameters:
                -
                    name: ID
                    description: ID
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/invoice'
                            examples:
                                newInvoice:
                                    value:
                                        id: 85
                                        price: 5
                                        orderId: 12
                                        userid: 41
                    description: |
                        Returns a list of invoices
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Invoice Not Found
                    description: Invoice not found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not Found:
                                    value:
                                        Error: Internal Server Error
                    description: Internal Server Error. Try Again Later
            summary: Update invoice.
            description: Updates invoice information.
        delete:
            tags:
                - invoices
            responses:
                '204':
                    description: Invoice has been deleted
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invoice not found:
                                    value:
                                        Error: Invoice not found
                    description: Invoice not found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Server error:
                                    value:
                                        Error: Internal server error.
                    description: Internal server error.
            summary: Delete invoice
            description: Deletes an exsisting invoice.
        parameters:
            -
                name: ID
                description: id
                schema:
                    type: integer
                in: path
                required: true
components:
    schemas:
        error:
            title: Root Type for errir
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: 'Error getting information, please try again later.'
        product:
            title: Root Type for product
            description: ''
            type: object
            properties:
                name:
                    type: string
                id:
                    format: int32
                    type: integer
                price:
                    format: int32
                    description: ''
                    type: integer
            example: |-
                {
                    "id": 1,,
                    "name": "Gaming PC Ultra",
                    "price": 3999
                }
        invoice:
            title: Root Type for invoice
            description: Invoice with product id and invoice specific id.
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                price:
                    format: int32
                    type: integer
                orderId:
                    format: int32
                    description: ''
                    type: integer
                userid:
                    format: int32
                    type: integer
            example:
                id: 1
                orderid: 2
                name: Gaming PC Ultra
                price: 3999
        order:
            title: Root Type for order
            description: ''
            required: []
            type: object
            properties:
                productId:
                    format: int32
                    description: ''
                    type: integer
                productAmount:
                    format: int32
                    description: ''
                    type: integer
                invoiceId:
                    format: int32
                    description: invoiceId
                    type: integer
                    example: ''
                price:
                    format: int32
                    description: Product Price
                    type: integer
                    example: ''
                id:
                    format: int32
                    description: OrderId
                    type: integer
                    example: ''
            example:
                id: 1
                productId: 3
                productAmount: 4
                invoiceId: 5
                price: 666
        user:
            description: ''
            type: object
            properties:
                id:
                    format: int32
                    description: ''
                    type: integer
                email:
                    description: ''
                    type: string
                name:
                    description: ''
                    type: string
                phoneNumber:
                    format: int32
                    description: ''
                    type: integer
            example:
                id: 33
                email: some text
                name: some text
                phoneNumber: 75
tags:
    -
        name: products
        description: ''
